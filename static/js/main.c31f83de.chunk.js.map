{"version":3,"sources":["context/socket.js","components/Plane.js","components/Path.js","components/Map.js","components/Chat.js","components/FlightInfo.js","components/ProfileNameInput.js","helpers/getRandomColors.js","App.js","reportWebVitals.js","index.js"],"names":["socket","socketio","connect","path","SocketContext","React","createContext","planeIcon","L","icon","iconUrl","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","Plane","props","console","log","planeCode","position","Marker","Tooltip","markerHtmlStylesStart","iconStart","divIcon","className","labelAnchor","html","markerHtmlStylesEnd","iconEnd","Path","originTitle","type","toString","positions","destinationTitle","Polyline","pathOptions","color","dashArray","lineJoin","lineCap","title","Map","useState","planePositions","setPlanePositions","center","setCenter","flights","setFlights","useContext","useEffect","on","data","length","newPositions","concat","prevState","includes","addedList","handlePosition","off","MapContainer","zoom","scrollWheelZoom","rel","href","integrity","crossorigin","src","TileLayer","attribution","url","map","code","i","planesInfo","info","pathColors","origin","destination","Object","keys","planecode","Chat","ChatController","chatCtl","msg","a","addMessage","content","name","message","Date","date","self","lastOne","chatList","addNewMessage","useMemo","setActionRequest","always","response","handleChatEmitted","chatController","onSubmit","FlightInfo","airline","plane","seats","passengers","pas","index","useStyles","makeStyles","theme","margin","spacing","ProfileNameInput","classes","Grid","container","alignItems","item","TextField","id","label","onChange","handleUsernameChange","getRandomColors","n","letters","split","colors","j","Math","floor","random","push","App","setPlanesInfo","numberOfPlanes","setNumberOfPlanes","setPathColors","setChatList","username","setUsername","colorList","updateFlights","handleChatReceived","emit","handlePlanesInfo","Provider","value","style","float","width","e","newName","target","Button","variant","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c31f83de.chunk.js","sourcesContent":["import React from 'react';\nimport socketio from \"socket.io-client\";\n// import { SOCKET_URL } from \"config\";\nconst SOCKET_URL = \"wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl\";\n\nexport const socket = socketio.connect(SOCKET_URL, {path: '/flights'});\nexport const SocketContext = React.createContext();\n","import React from 'react'\nimport {Marker, Tooltip} from 'react-leaflet'\nimport L from 'leaflet'\nimport '../App.css';\n\nconst iconUrl = 'https://e7.pngegg.com/pngimages/115/289/png-clipart-airplane-silhouette-aircraft-drawing-airplane-hand-wikimedia-commons.png'\nvar planeIcon = L.icon({\n    iconUrl: iconUrl,\n    iconSize:     [35, 40], // size of the icon\n    shadowSize:   [0, 0], // size of the shadow\n    iconAnchor:   [0, 0], // point of the icon which will correspond to marker's location\n    shadowAnchor: [0, 0],  // the same for the shadow\n    popupAnchor:  [0, 0] // point from which the popup should open relative to the iconAnchor\n});\n\nfunction Plane(props) {\n    console.log(props.planeCode)\n    console.log(props.position)\n    return (\n        <Marker \n        position={props.position} \n        icon={planeIcon}\n       >\n            <Tooltip>{props.planeCode} </Tooltip>\n        </Marker > \n    )\n}\n\nexport default Plane\n","import React from \"react\"\nimport {Polyline, Tooltip, Marker} from 'react-leaflet'\nimport L from 'leaflet'\n\nfunction Path(props) {\n    // console.log(props.type)\n    const originTitle = props.type === \"straight\" ? 'origen ' + \n        props.planeCode.toString() + \" :\" + \n        props.positions[0].toString() \n        : null\n    const destinationTitle = props.type === \"straight\" ? 'destino ' + \n        props.planeCode.toString() + \" :\" + \n        props.positions[1].toString() \n        : null\n    return(\n        <Polyline \n            pathOptions={{\n                color: props.color,\n                dashArray: props.type === \"straight\" ? '10,15': '1,0.5',\n                lineJoin: 'round',\n                lineCap:'butt'}} \n            positions={props.positions} \n        >\n            <Tooltip>{props.planeCode} </Tooltip>\n            {props.type === \"straight\" ? \n                <Marker \n                    position={props.positions[0]}\n                    title= {originTitle}\n                    icon={iconStart} \n                />\n                : \n                null\n            }\n            {props.type === \"straight\" ? \n                <Marker \n                    position={props.positions[1]}\n                    title={destinationTitle}\n                    icon={iconEnd} \n                />\n                : \n                null\n            }    \n        </Polyline>\n    )\n}\n\n\nconst colorStart = 'green'\nconst colorEnd = 'red'\n\nconst markerHtmlStylesStart = `\n  background-color: ${colorStart};\n  width: 1rem;\n  height: 1rem;\n  display: block;\n  left: 0rem;\n  top: 0rem;\n  position: relative;\n  border-radius: 1rem 1rem 0;\n  transform: rotate(45deg);\n  border: 1px solid #FFFFFF`\n\nconst iconStart = L.divIcon({\n  className: \"\",\n  iconAnchor: [0, 24],\n  labelAnchor: [-6, 0],\n  popupAnchor: [0, -36],\n  html: `<span style=\"${markerHtmlStylesStart}\" />`\n})\n\nconst markerHtmlStylesEnd = `\n  background-color: ${colorEnd};\n  width: 1rem;\n  height: 1rem;\n  display: block;\n  left: 0rem;\n  top: 0rem;\n  position: relative;\n  border-radius: 1rem 1rem 0;\n  transform: rotate(45deg);\n  border: 1px solid #FFFFFF`\n\nconst iconEnd = L.divIcon({\n  className: \"\",\n  iconAnchor: [0, 24],\n  labelAnchor: [-6, 0],\n  popupAnchor: [0, -36],\n  html: `<span style=\"${markerHtmlStylesEnd}\" />`\n})\n\n\nexport default Path;","import React, {useState, useContext, useEffect} from 'react'\nimport { MapContainer, TileLayer } from 'react-leaflet'\nimport '../App.css';\nimport {SocketContext} from '../context/socket.js'\nimport Plane from \"./Plane\"\nimport Path from \"./Path\"\n\nfunction Map(props) {\n    const [planePositions, setPlanePositions]= useState({});\n    const [center, setCenter] = useState([ -35, -71])\n    const [flights, setFlights]= useState([]);\n    const socket = useContext(SocketContext);\n\n    const handlePosition = (data) => {\n        const planeCode = data[\"code\"];\n        const position = data[\"position\"];\n        if (flights.length === 0) {setCenter(position)}\n        var previousPositions = planePositions[planeCode] ?  planePositions[planeCode] : []\n        var newPositions = previousPositions.concat([position])\n        // console.log(planeCode)\n        // console.log(newPositions)\n        // console.log(Object.keys(planePositions).length)\n        setPlanePositions(prevState => {\n            return {\n                ...prevState,\n                [planeCode]: newPositions\n            }\n        });\n        setFlights(prevState => {\n            if (prevState.includes(planeCode)) {\n                return prevState\n            }\n            else{\n                // console.log(prevState)\n                // console.log(flights)\n                var addedList = [planeCode]\n                var newState = flights.concat(addedList)\n                return newState\n            }     \n        });\n    };\n\n    useEffect(() => {\n        // as soon as the component is mounted, do the following tasks:\n        // subscribe to socket events\n        socket.on(\"POSITION\", data => {\n            handlePosition(data);\n        }\n        ); \n    \n        return () => {\n          // before the component is destroyed\n          // unbind all event handlers used in this component\n          socket.off(\"POSITION\");\n        };\n      }, [socket, planePositions]);\n\n\n    return (\n        <MapContainer center={center} zoom={5} scrollWheelZoom={false}>\n            <head> \n                <link\n                rel=\"stylesheet\"\n                href=\"https://unpkg.com/leaflet@1.6.0/dist/leaflet.css\"\n                integrity=\"sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ==\"\n                crossorigin=\"\"\n                />\n                <script \n                src=\"https://unpkg.com/leaflet@1.7.1/dist/leaflet.js\"\n                integrity=\"sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA==\"\n                crossorigin=\"\">\n                </script>\n            </head>\n            <TileLayer\n                attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            />\n        \n            {flights.length > 0 ? flights.map((code, i) => \n            <Plane \n                key={i} \n                position={planePositions[code][planePositions[code].length - 1]} \n                planeCode={code}>\n            </Plane>\n            ) : \n            null\n            }\n            {props.planesInfo.length > 0 ? \n                props.planesInfo.map((info, i) =>\n                    <Path\n                        key={i} \n                        color={props.pathColors[i]} \n                        positions={[info.origin, info.destination]}\n                        type={\"straight\"}\n                        planeCode={info.code}\n                    />\n                )\n                :null\n            }\n\n            {Object.keys(planePositions).length > 0 ? \n                Object.keys(planePositions).map((planecode, i) =>\n                    <Path\n                        key={i} \n                        color={\"black\"}\n                        positions={planePositions[planecode]}\n                        type={\"curved\"}\n                        planeCode={planecode}\n                    />\n                )\n                :null\n            }\n            \n        </MapContainer>\n    )\n}\n\nexport default Map \n\n","import React, {useState, useEffect, useMemo} from \"react\"\nimport {ChatController, MuiChat} from \"chat-ui-react\"\n\n\nfunction Chat(props) {\n    const [chatCtl] = useState(new ChatController());\n    \n    async function addNewMessage(msg) {\n        if (msg) {\n            await chatCtl.addMessage({\n                type: 'text',\n                content: msg.name + \": \" + msg.message + \"\\n\" + Date(msg.date),\n                self: false,\n              });\n        }     \n    }\n\n    useEffect(() => {\n        var lastOne = props.chatList.length - 1 \n        addNewMessage(props.chatList[lastOne])\n    }, [props.chatList])\n  \n    useMemo(async () => {\n        // Chat content is displayed using ChatController\n        const response = await chatCtl.setActionRequest({ \n            type: 'text',\n            always: true, },\n            (response) => {\n                props.handleChatEmitted(response)\n              }\n            );\n    }, [chatCtl, props]);\n  \n    return (\n        <MuiChat  \n            chatController={chatCtl} \n            onSubmit={props.handleChatEmitted}\n        />  \n    )\n  }\n  \n\nexport default Chat","import React from \"react\"\nimport '../App.css';\nfunction FlightInfo(props) {\n\n    return(\n        <div className=\"singlePlainInfo\">\n            <ul>\n                <li> codigo: {props.code}</li>\n                <li> aerolinea: {props.airline}</li>\n                <li> origen: {props.origin[0]}, {props.origin[1]}</li>\n                <li> destino: {props.destination[0]}, {props.destination[1]}</li>\n                <li> avion: {props.plane}</li>\n                <li> asientos: {props.seats}</li>\n                {props.passengers.map((pas, index) => {\n                    return (\n                        <p> nombre: {pas[\"name\"]}, \n                            edad: {pas[\"age\"]}\n                        </p> \n                    )\n                     \n                })}\n            </ul>\n        </div>\n    )\n}\n\nexport default FlightInfo\n// {code:String,airline:String,origin: [Float,Float],destination: [Float,Float],plane:String,seats:Integer,passengers: [{name:String, age:Integer}]}]","import React from \"react\"\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1),\n    },\n}));\n\nfunction ProfileNameInput(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.margin}>\n            <Grid container spacing={1} alignItems=\"flex-end\">\n                <Grid item>\n                    <AccountCircle />\n                </Grid>\n                <Grid item>\n                    <TextField \n                        id=\"input-with-icon-grid\" \n                        label=\"Username\"\n                        onChange={props.handleUsernameChange} />\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default ProfileNameInput\n","\nfunction getRandomColors(n) {\n    var letters = '0123456789ABCDEF'.split('');\n    var colors = []\n    for (var j = 0; j < n; j++) {\n        var color = '#';\n        for (var i = 0; i < 6; i++ ) {\n            color += letters[Math.floor(Math.random() * 16)];\n        }\n        colors.push(color);\n    }\n    return colors\n}\n\nexport default getRandomColors","import React, {useState, useEffect} from \"react\"\nimport './App.css';\nimport Map from './components/Map'\nimport Chat from \"./components/Chat\"\nimport FlightInfo from \"./components/FlightInfo\"\nimport ProfileNameInput from \"./components/ProfileNameInput\"\nimport {SocketContext, socket} from './context/socket'\nimport Button from \"@material-ui/core/Button\"\nimport getRandomColors from \"./helpers/getRandomColors\"\n\nfunction App() {\n  const [planesInfo, setPlanesInfo] = useState([])\n  const [numberOfPlanes, setNumberOfPlanes] = useState(0)\n  const [pathColors, setPathColors] = useState([])\n  const [chatList, setChatList] = useState([])\n  const [username, setUsername] = useState(\"Default User\")\n\n  // set colors of paths when new planes appear\n  useEffect(() => {\n    const colorList = getRandomColors(numberOfPlanes)\n    setPathColors(colorList)\n  }, [numberOfPlanes]);\n\n  // call FLIGHTS info when app mounts\n  useEffect(() => {\n    updateFlights()\n    // const colorList = getRandomColors(numberOfPlanes)\n    // setPathColors(colorList)\n  }, []);\n\n  // listenning to CHAT broadcasts\n  useEffect(() => {\n    // subscribe to socket events\n    socket.on(\"CHAT\", data => {\n      handleChatReceived(data);\n    })\n    // before the component is destroyed\n    // unbind all event handlers used in this component\n    return() => {socket.off(\"CHAT\");}\n  }, [chatList]);\n\n\n  const updateFlights = () => {\n  \n    // emit USER_ONLINE event\n    socket.emit(\"FLIGHTS\"); \n\n    // subscribe to socket events\n    socket.on(\"FLIGHTS\", data => {\n        handlePlanesInfo(data);\n    })\n    // before the component is destroyed\n    // unbind all event handlers used in this component\n    return() => {socket.off(\"FLIGHTS\");} \n  }\n\n  const handlePlanesInfo = (data) => {\n    console.log(data)\n    setPlanesInfo(data);\n    if (numberOfPlanes !== planesInfo.length) {\n      console.log(\"cambiando n de aviones\")\n      setNumberOfPlanes(planesInfo.length)\n    }\n  };\n\n  const handleChatReceived= (msg) => {\n    // if (msg.name == username) {return}\n    // emit CHAT event\n    setChatList(prevState => {\n      var newState = prevState.concat([msg])\n      // console.log(newState)\n      return newState\n    }) \n  };\n\n  const handleChatEmitted = (response) => {\n    const value = response.value\n    const msg = {name:username, message:value}\n    // console.log(msg)\n    // emit CHAT event\n    socket.emit(\"CHAT\", msg); \n  };\n\n  const handleUsernameChange = (e) => {\n    var target = e.target\n    var newName= target.value\n    // console.log(\"previous user\")\n    // console.log(username)\n    setUsername(newName)\n    // console.log(\"cambiando user!\")\n    // console.log(username)\n  };\n\n  return (\n    <SocketContext.Provider value={socket}>\n      <div id=\"mapid\">\n          <Map planesInfo={planesInfo} pathColors={pathColors}/>\n      </div>\n      <div>\n        <div className=\"chatContainer\">\n          <Chat\n          style={{float:\"right\", width:\"20%\"}}\n          chatList={chatList}\n          handleChatEmitted={handleChatEmitted}\n          />\n          <ProfileNameInput handleUsernameChange={handleUsernameChange}/> \n        </div>\n        <div id=\"mapid\"  style={{float:\"left\"}}>\n          <Map planesInfo={planesInfo} pathColors={pathColors}/>\n        </div>\n      </div>\n      <div className=\"planeInfo\" style={{float:\"left\", width:\"60%\"}}> \n        <Button \n          variant=\"outlined\" \n          color=\"primary\"\n          onClick={updateFlights}>\n          Get Planes Info!\n        </Button>\n        {planesInfo.length > 0 ? \n          planesInfo.map((data, i) => \n            <FlightInfo\n              className=\"planeInfo\" \n              key={i} \n              code={data[\"code\"]}\n              airline={data[\"airline\"]}\n              origin={data[\"origin\"]}\n              destination={data[\"destination\"]}\n              plane={data[\"plane\"]}\n              seats={data[\"seats\"]}\n              passengers={data[\"passengers\"]}\n            />\n          ) : \n          null\n        }\n      </div>\n    \n    </SocketContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}